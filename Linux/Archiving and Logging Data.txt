Archiving and Logging Data


Step 1: Create, Extract, Compress, and Manage tar Backup Archives
Command to extract the TarDocs.tar archive to the current directory: tar xvvf TarDocs.tar


Command to create the Javaless_Doc.tar archive from the TarDocs/ directory, while excluding the TarDocs/Documents/Java directory:
 tar cvvf Javaless_Docs.tar --exclude="TarDocs/Documents/Java" TarDocs/

Command to ensure Java/ is not in the new Javaless_Docs.tar archive:
tar tvf Javaless_Docs.tar | grep Java
Bonus
Command to create an incremental archive called logs_backup_tar.gz with only changed files to snapshot.file for the /var/log directory:
Critical Analysis Question
Why wouldn't you use the options -x and -c at the same time with tar?

Step 2: Create, Manage, and Automate Cron Jobs
Cron job for backing up the /var/log/auth.log file:
 0 6 * * 3 tar zcf /auth_backup.tgz /var/log/auth.log

Step 3: Write Basic Bash Scripts
Brace expansion command to create the four subdirectories:
mkdir -p ~/backups/{freemem,diskuse,openlist,freedisk}
Paste your system.sh script edits below:

 #!/bin/bash
[Your solution script contents here]
#!/bin/bash

# prints free memory
free -h > ~/backups/freemem/free_mem.txt
# prints disk usage
du -h > ~/backups/diskuse/disk_usage.txt
# List all open files
lsof > ~/backups/openlist/open_list.txt
# Prints disk space statistics
df -h > ~/backups/freedisk/free_disk.txt

Command to make the system.sh script executable: chmod +x system.sh
Optional
Commands to test the script and confirm its execution:sh system.sh
Bonus
Command to copy system to system-wide cron directory:sudo cp system.sh /etc/cron.weekly





Step 4. Manage Log File Sizes
Run sudo nano /etc/logrotate.conf to edit the logrotate configuration file.

 Configure a log rotation scheme that backs up authentication messages to the /var/log/auth.log.




Add your config file edits below:
[Your logrotate scheme edits here]/var/log/auth.log {
    weekly
    rotate 7
    notifempty
    delaycomppression
    missingok
}

